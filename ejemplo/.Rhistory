car::lht(m2.6)
# librerias
library(car)
library(dplyr)
library(forcats)
library(haven)
library("GLMMadaptive")
library(lme4)
library(texreg)
library(xtable)
library(influence.ME)
setwd("C:/Users/Villagran/Desktop/Magister/4to y último semestre/datos multinivel/replicacion")
data<-read_stata("data.dta")
data11<-data %>% dplyr::filter(pais!=11)
data12<-data %>% dplyr::filter(pais!=12)
data13<-data %>% dplyr::filter(pais!=13)
data14<-data %>% dplyr::filter(pais!=14)
data15<-data %>% dplyr::filter(pais!=15)
data16<-data %>% dplyr::filter(pais!=16)
data17<-data %>% dplyr::filter(pais!=17)
data18<-data %>% dplyr::filter(pais!=18)
data19<-data %>% dplyr::filter(pais!=19)
data20<-data %>% dplyr::filter(pais!=20)
data21<-data %>% dplyr::filter(pais!=21)
## Variables dummy
mm1<-mixed_model (ros4_dich7~bgi_deci_fear_et_cent + gini_gross_swid + redistr_swid + gni_pc_1000 + redis_polar_wt + mestizo + indig + black + mulatto + otroethn + quintall + sociogen + idiogen + chatt + age + edyears + female ,  random = ~ 1 | country_year,family = binomial(),  data = data, nAGQ=5 )
mm1<-mixed_model (ros4_dich7~bgi_deci_fear_et_cent + gini_gross_swid + redistr_swid + gni_pc_1000 + redis_polar_wt + mestizo + indig + black + mulatto + otroethn + quintall + sociogen + idiogen + chatt + age + edyears + female ,  random = ~ 1 | country_year,family = binomial(),  data = data, nAGQ=0 )
data11<-data %>% dplyr::filter(pais!=11)
data12<-data %>% dplyr::filter(pais!=12)
data13<-data %>% dplyr::filter(pais!=13)
data14<-data %>% dplyr::filter(pais!=14)
data15<-data %>% dplyr::filter(pais!=15)
data16<-data %>% dplyr::filter(pais!=16)
data17<-data %>% dplyr::filter(pais!=17)
data18<-data %>% dplyr::filter(pais!=18)
data19<-data %>% dplyr::filter(pais!=19)
data20<-data %>% dplyr::filter(pais!=20)
data21<-data %>% dplyr::filter(pais!=21)
m11<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data11,
family=binomial)
m12<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data12,
family=binomial)
m13<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data13,
family=binomial)
m14<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data14,
family=binomial)
m15<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data15,
family=binomial)
m16<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data16,
family=binomial)
m17<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data17,
family=binomial)
m18<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data18,
family=binomial)
m19<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data19,
family=binomial)
m20<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data20,
family=binomial)
m21<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data21,
family=binomial)
screenreg(m11)
screenreg(m12)
screenreg(m13)
screenreg(m14)
screenreg(m15)
screenreg(m16)
screenreg(m17)
table(data$pais)
data<-read_stata("data.dta")
data<-read_stata("data.dta")
table(data$pais)
table(data$pais)
screenreg(m21)
table(data$pais)
setwd("C:/Users/Villagran/Desktop/Magister/4to y último semestre/datos multinivel/replicacion")
data<-read_stata("data.dta")
data1<-data %>% dplyr::filter(pais!=1)
data2<-data %>% dplyr::filter(pais!=2)
data3<-data %>% dplyr::filter(pais!=3)
data4<-data %>% dplyr::filter(pais!=4)
data5<-data %>% dplyr::filter(pais!=5)
data6<-data %>% dplyr::filter(pais!=6)
data7<-data %>% dplyr::filter(pais!=7)
data8<-data %>% dplyr::filter(pais!=8)
data9<-data %>% dplyr::filter(pais!=9)
data10<-data %>% dplyr::filter(pais!=10)
data11<-data %>% dplyr::filter(pais!=11)
data12<-data %>% dplyr::filter(pais!=12)
data13<-data %>% dplyr::filter(pais!=13)
data14<-data %>% dplyr::filter(pais!=14)
data15<-data %>% dplyr::filter(pais!=15)
data16<-data %>% dplyr::filter(pais!=16)
data17<-data %>% dplyr::filter(pais!=17)
data21<-data %>% dplyr::filter(pais!=21)
m1<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data1,
family=binomial)
texreg(list(m1), digits = 3, caption.above=TRUE,float.pos = "h",
stars=c(0.1, 0.05, 0.01), include.ci = FALSE,
custom.coef.names =c("Intercepto","BGI",
"GINI Percápita",
"Mestizo", "Indigenous", "Black",
"Mulatto", "Other etnicity",
"Quintiles", "SE Evaluations",
"PE Evaluations", "Church Attendance",
"Age", "Education", "Female", "Polarization cen",
"LP Balance cen","LPB*Polarizationc"))
m1<-glmer(ros4_dich7~bgi_deci_fear_et_cent +gni_pc_1000
+ redis_polar_wt_cen + lpb_cen +lpbXpolar_cen
+ mestizo+indig+black+mulatto+
otroethn+
quintall +sociogen + idiogen + chatt + age
+ edyears+female+ (1|year/countryyear),data=data1,
family=binomial)
screenreg(m1)
knitr::opts_chunk$set(include = TRUE, echo = FALSE, message = FALSE, warning = FALSE)
tabla1=data.frame()
tabla1$anho<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
tabla1$anho<-1
tabla1=data.frame(7,4)
View(tabla1)
lienzo<-matrix(7:4)
View(lienzo)
lienzo<-matrix(nrow = 7, ncol = 4)
tabla1=data.frame(lienzo)
View(tabla1)
tabla1$anho<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
View(tabla1)
lienzo<-matrix(nrow = 6, ncol = 4)
tabla1=data.frame(lienzo)
tabla1$anho<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
View(tabla1)
tabla1$x1<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
View(tabla1)
tabla1$X1<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
View(tabla1)
lienzo<-matrix(nrow = 6, ncol = 4)
tabla1=data.frame(lienzo)
tabla1$X1<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
colnames(tabla1)[colnames(tabla1) == "X1"]<- "Año de la medición"
View(tabla1)
tabla1$X1<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
colnames(tabla1)[colnames(tabla1) == "X1"]<- "Año de la medición"
tabla1$X2<-c("2927", "2473","2229","Muestra de refresco: 1519",
"2153","Muestra de refresco: 1264")
colnames(tabla1)[colnames(tabla1) == "X2"]<- "N de la muestra"
View(tabla1)
lienzo<-matrix(nrow = 6, ncol = 4)
tabla1=data.frame(lienzo)
tabla1$X1<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3)",
"2019 (ola 4)","2019 (ola 4)")
colnames(tabla1)[colnames(tabla1) == "X1"]<- "Año de la medición"
tabla1$X2<-c("2927", "2473","2229","Muestra de refresco: 1519",
"2153","Muestra de refresco: 1264")
colnames(tabla1)[colnames(tabla1) == "X2"]<- "N de la muestra"
tabla1$X3<-c("-", "84.5%","90.1%","-",
"96.6%","83.2%")
colnames(tabla1)[colnames(tabla1) == "X3"]<- "Porcentaje de la muestra del año anterior, recuperada"
View(tabla1)
stargazar(tabla1,type = "latex",
notes = "Elaboración propia",
float = TRUE)
stargazer(tabla1,type = "latex",
notes = "Elaboración propia",
float = TRUE)
#library(xtable) #Para hacer tablas y usar cor
#library(summarytools) #Para hacer tablas y calcular descriptivos
#library(plyr) #Para usar rbind.fill
#library(corrplot) #Para usar corrplot
library(stargazer) #para hacer tablas con stargazer
stargazer(tabla1,type = "latex",
notes = "Elaboración propia",
float = TRUE)
library(texreg)
texreg(tabla1,type = "latex",
notes = "Elaboración propia",
float = TRUE)
library(kableExtra) #Para hacer tablas
tabla1$X4<-c("-", "15.5%","9.9%","-",
"3.4%","16.8%")
colnames(tabla1)[colnames(tabla1) == "X4"]<- "Porcentaje de atrición"
View(tabla1)
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"))
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position")) %>%
landscape()
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>%
row_spec(row = c(1,3,5),
background = light_striping_table_colour)
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center")
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>%
row_spec(row = c(1,3,5))
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>%
row_spec(row = c(1,3,5),
background = blue)
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>%
row_spec(row = c(1,3,5),
background = gray)
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>%
row_spec(row = c(1,3,5),
background = "gray")
View(tabla1)
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center")
%>%
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>% row_spec(row = c(1,2,3,4,5,6),
align = "c")
knitr::opts_chunk$set(include = TRUE, echo = FALSE, message = FALSE, warning = FALSE)
lienzo<-matrix(nrow = 6, ncol = 4)
tabla1=data.frame(lienzo)
tabla1$X1<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3; Muestra de refresco)",
"2019 (ola 4)","2019 (ola 4; Muestra de refresco)")
colnames(tabla1)[colnames(tabla1) == "X1"]<- "Año de la medición"
tabla1$X2<-c("2927", "2473","2229","1519",
"2153","1264")
colnames(tabla1)[colnames(tabla1) == "X2"]<- "N de la muestra"
tabla1$X3<-c("-", "84.5%","90.1%","-",
"96.6%","83.2%")
colnames(tabla1)[colnames(tabla1) == "X3"]<- "Porcentaje de la muestra del año anterior, recuperada"
tabla1$X4<-c("-", "15.5%","9.9%","-",
"3.4%","16.8%")
colnames(tabla1)[colnames(tabla1) == "X4"]<- "Porcentaje de atrición"
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta", linesep = "")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>% row_spec(row = c(1,2,3,4,5,6),
align = "c")%>%footnote(general = "Elaboración propia")
library(tidyverse)
library(tinytex) #Para usar Latex
library(kableExtra) #Para hacer tablas
#library(xtable) #Para hacer tablas y usar cor
#library(summarytools) #Para hacer tablas y calcular descriptivos
#library(plyr) #Para usar rbind.fill
#library(corrplot) #Para usar corrplot
library(stargazer) #para hacer tablas con stargazer
#library(carData) #para usar mutate
library(dplyr) #para ayudar a stargazer
#library(purrr) #para ayudar a stargazer
library(nnet) #para usar multinom
library(DescTools) #para usar PseudoR2
library(texreg)
library(lme4)
library(summarytools)
library(effects)
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta", linesep = "")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>% row_spec(row = c(1,2,3,4,5,6),
align = "c")%>%footnote(general = "Elaboración propia")
![Violencia de Carabineros y Componente del índice de Confianza](3.jpg)
setwd("C:/Users/Villagran/Desktop/tesis latex")
####Cargar BBDD####
load("dataw.Rdata")
load("data_long.Rdata")
# Media de confianza política del respondiente para todo el periodo
data_long$c.polm <- ave(data_long$c.pol, data_long$id)
# Valores anuales de confianza política del individuo centradas en su media
data_long$c.polgc <- data_long$c.pol - data_long$c.polm
table(data_long$c.polgc)
data_long$c.pol.cc[data_long$c.polgc< -1.5]<-1
data_long$c.pol.cc[data_long$c.polgc>=-1.5 & data_long$c.polgc<=-1 ]<-2
table(data_long$c.pol.cc)
data_long$c.pol.cc[data_long$c.polgc<= -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc> -1.5 & data_long$c.polgc<=-1 ]<-1
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc<-1 ]<-1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<-1
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc< -1 ]<-1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<-1
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc< -1 ]<- -1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<- -1
data_long$c.pol.cc[data_long$c.polgc==0 ]<- 0
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc< -1 ]<- -1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<- -1
data_long$c.pol.cc[data_long$c.polgc==0 ]<- 0
data_long$c.pol.cc[data_long$c.polgc<=1 & data_long$c.polgc>0 ]<- 1
data_long$c.pol.cc[data_long$c.polgc>1 & data_long$c.polgc<=1.5 ]<- 1.5
data_long$c.pol.cc[data_long$c.polgc<=2 & data_long$c.polgc>1.5 ]<- 2
data_long$c.pol.cc[data_long$c.polgc<=2.5 & data_long$c.polgc>2 ]<- 2.5
data_long$c.pol.cc[data_long$c.polgc>2.5 ]<- 3
table(data_long$c.pol.cc)
table(data_long$c.polgc)
df<-data.frame(table(data_long$c.polgc))
View(df)
# Valor predicho para movilizado, en cuanto a tolerar represión
confianza<-seq(min(data_long$c.polgc, na.rm = TRUE),
max(data_long$c.polgc, na.rm = TRUE), length=93)
library(rvest)
install.packages("rvest")
install.packages("purrr")
library(openxlsx)
library(stringr)
library(rvest)
library(stringr)
library(purrr)
pagina<-read_html("https://onedrive.live.com/?cid=436c65a4c90b65c2&id=436C65A4C90B65C2%21346&ithint=album&authkey=%21AlpuEvx7sYxZGog&v=photos")
View(pagina)
nombre <- pagina %>%
html_elements(xpath = '//div[@class= "od-DetailsRow-cell--Name ms-DetailsRow-cell cell-211 cellUnpadded-209"]')
pagina<-read_html("https://onedrive.live.com/?cid=436c65a4c90b65c2&id=436C65A4C90B65C2%21346&ithint=album&authkey=%21AlpuEvx7sYxZGog&v=photos")
nombre <- pagina %>%
html_elements(xpath = '//div[@class= "od-DetailsRow-cell--Name ms-DetailsRow-cell cell-211 cellUnpadded-209"]')
nombre
nombre <- pagina %>%
html_elements(xpath = '//gridcell[@class= "od-DetailsRow-cell--Name ms-DetailsRow-cell cell-211 cellUnpadded-209"]')
sjmisc
?sjmisc
rm(list = ls())
setwd("C:/Users/villagran/Desktop/scribs/datavoz/mallas de validacion/CEP87")
# LECTURA DE BB.DD DE DATOS
library(openxlsx)
library(dplyr)
library(tidyverse)
library(stringr)
ejemplo <- data.frame(id = 1:10,
x1 = 10:19,                      # Ejemplo
x2 = 20:29,
x3 = c(NA,NA,NA,1,NA,1,99,1,NA,NA),
x4 = c(NA,NA,NA,"BLANCO",NA,"BLANCO",99,"ROJO",NA,NA))
seleccion<-c("x1","x3")
resultadosNA<-data.frame(ejemplo$id)
for (i in seleccion){
# identifica posición de la variable/columna en el data frame:
coordenada<-grep(paste("^",i,"$", sep=""), names(ejemplo))
# revisa si hay NA en ese columna para cada fila del data frame. * 1, devuelve 1 o 0
columna<-((is.na(ejemplo[,coordenada]))*1)
# va pegando los resultados en el data frame vacío creado previamente
resultadosNA<-cbind(assign("i",columna),resultadosNA)
}
resultadosNA<-rev(resultadosNA)
rotulos<-  append("id.", seleccion)
colnames(resultadosNA)<-rotulos
resultadosNA<-resultadosNA %>%
dplyr::mutate_at(c(2:ncol(resultadosNA)), recode, '1'='NA', '0'='Con Dato')
View(resultadosNA)
salida<-c("x2","x2","x2")
llegada<-c("x3","x3","x3")
criterio.salto<-c("25","23.27","23:27")
resultadosS<-data.frame(ejemplo$id)
secuencia<-function(objeto){
n<-length(objeto)
seq(objeto[[1]],objeto[[n]])
}
criterio.salto<- str_replace(criterio.salto, "\\.", ",")
for (i in 1:length(salida)){
# 1ra parte, traducir en un rango de números imputs de carácteres como por ejemplo
# "2,5" en los números "2 5". imputs como "1:3", en rangos "1 2 3". Y unidades
# como "4", en el número al que corresponden
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
# Identifica la posición en el data frame, de la variable/columna de salto
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(ejemplo))
# Identifica la posición en el data frame, de la variable/columna de llegada
coordenada2<-grep(paste("^",llegada[i],"$",sep=""), names(ejemplo))
# Chequea si la variable de salto tiene obervaciones que cumplen la condicion
# de filtro. La variable de BBDD debe ser de tipo numérica o integer para
# ello, nos aseguramos de eso incluyendo las funciones as.integer y unlist
variable1<-as.integer(unlist(ejemplo[,coordenada1]))
s.check<-(variable1 %in%  rango)*1
#Chequea si la variable de llegada tiene obervaciones
ll.check<-(!is.na(ejemplo[,coordenada2]))*1
# Se pegan los resultados anteriores, que son agregados al a otro data frame
# creado previamente, donde se registrarán los resultados para cada individuo
revision<-paste0(s.check,ll.check)
resultadosS<-cbind(revision,resultadosS)
}
nombres.u<-c()
for (i in 1:length(llegada)){
x1<-paste0(salida[i],"-",llegada[i], " (",criterio.salto[i],")")
nombres.u<-append(nombres.u,x1)
}
# Reordenar base de datos de revisión y añadir etiquetas
resultadosS<-rev(resultadosS)
etiquetas<-  append("id", nombres.u)
colnames(resultadosS)<-etiquetas
resultadosS<-resultadosS %>%
dplyr::mutate_at(c(2:ncol(resultadosS)), recode, '00'='sin salto',
'11'='s. correcto','01'='s. error de filtro', '10'='s. NA llegada')
contraste<-ejemplo %>% select(id,x2,x3)
contraste<-merge(contraste,resultadosS, all.x = T)
View(contraste)
library(haven)
library(openxlsx)
library(dplyr)
library(tidyverse)
library(stringr)
#data_enut          <- read_sav("BBDD/BASE_USUARIO_corregida.sav")
data_enut_alterada <- read_sav("BASE_USUARIO_alterada.sav")
setwd("C:/Users/Villagran/Desktop/scribs/datavoz/mallas de validacion/ejemplo")
library(haven)
library(openxlsx)
library(dplyr)
library(tidyverse)
library(stringr)
#data_enut          <- read_sav("BBDD/BASE_USUARIO_corregida.sav")
data_enut_alterada <- read_sav("BASE_USUARIO_alterada.sav")
data<-data_enut_alterada[,c("id_persona","f11_1_1","f12_1_1" )]
# Creacion de dos vectores SALIDAS Y LLEGADAS
salida<-c("f11_1_1")
llegada<-c("f12_1_1")
criterio.salto<-("1")
criterio.salto<- str_replace(criterio.salto, "\\.", ",")
resultadosS<-data.frame(data$id_persona)
secuencia<-function(objeto){
n<-length(objeto)
seq(objeto[[1]],objeto[[n]])
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
coordenada2<-grep(paste("^",llegada[i],"$",sep=""), names(data))
variable1<-as.integer(unlist(data[,coordenada1]))
s.check<-(variable1 %in%  rango)*1
ll.check<-(!is.na(data[,coordenada2]))*1
revision<-paste0(s.check,ll.check)
resultadosS<-cbind(revision,resultadosS)
}
nombres.u<-c()
for (i in 1:length(llegada)){
x1<-paste0(salida[i],"-",llegada[i], " (",criterio.salto[i],")")
nombres.u<-append(nombres.u,x1)
}
# Reordenar base de datos de revisión y añadir etiquetas
resultadosS<-rev(resultadosS)
etiquetas<-  append("id", nombres.u)
colnames(resultadosS)<-etiquetas
resultadosS<-resultadosS %>%
dplyr::mutate_at(c(2:ncol(resultadosS)), recode, '00'='sin salto',
'11'='s. correcto','01'='s. error de filtro', '10'='s. NA llegada')
sjmisc::frq(resultadosS$`f11_1_1-f12_1_1 (1)`)
