align = "c")
knitr::opts_chunk$set(include = TRUE, echo = FALSE, message = FALSE, warning = FALSE)
lienzo<-matrix(nrow = 6, ncol = 4)
tabla1=data.frame(lienzo)
tabla1$X1<-c("2016 (ola 1)", "2017 (ola 2)","2018 (ola 3)","2018 (ola 3; Muestra de refresco)",
"2019 (ola 4)","2019 (ola 4; Muestra de refresco)")
colnames(tabla1)[colnames(tabla1) == "X1"]<- "Año de la medición"
tabla1$X2<-c("2927", "2473","2229","1519",
"2153","1264")
colnames(tabla1)[colnames(tabla1) == "X2"]<- "N de la muestra"
tabla1$X3<-c("-", "84.5%","90.1%","-",
"96.6%","83.2%")
colnames(tabla1)[colnames(tabla1) == "X3"]<- "Porcentaje de la muestra del año anterior, recuperada"
tabla1$X4<-c("-", "15.5%","9.9%","-",
"3.4%","16.8%")
colnames(tabla1)[colnames(tabla1) == "X4"]<- "Porcentaje de atrición"
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta", linesep = "")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>% row_spec(row = c(1,2,3,4,5,6),
align = "c")%>%footnote(general = "Elaboración propia")
library(tidyverse)
library(tinytex) #Para usar Latex
library(kableExtra) #Para hacer tablas
#library(xtable) #Para hacer tablas y usar cor
#library(summarytools) #Para hacer tablas y calcular descriptivos
#library(plyr) #Para usar rbind.fill
#library(corrplot) #Para usar corrplot
library(stargazer) #para hacer tablas con stargazer
#library(carData) #para usar mutate
library(dplyr) #para ayudar a stargazer
#library(purrr) #para ayudar a stargazer
library(nnet) #para usar multinom
library(DescTools) #para usar PseudoR2
library(texreg)
library(lme4)
library(summarytools)
library(effects)
kableExtra::kable(tabla1, "latex", booktabs = T, caption = "Nivel de atrición en el proceso de encuesta", linesep = "")%>%
kable_styling(latex_options = c("striped","hold_position"),full_width = T, position = "center") %>% row_spec(row = c(1,2,3,4,5,6),
align = "c")%>%footnote(general = "Elaboración propia")
![Violencia de Carabineros y Componente del índice de Confianza](3.jpg)
setwd("C:/Users/Villagran/Desktop/tesis latex")
####Cargar BBDD####
load("dataw.Rdata")
load("data_long.Rdata")
# Media de confianza política del respondiente para todo el periodo
data_long$c.polm <- ave(data_long$c.pol, data_long$id)
# Valores anuales de confianza política del individuo centradas en su media
data_long$c.polgc <- data_long$c.pol - data_long$c.polm
table(data_long$c.polgc)
data_long$c.pol.cc[data_long$c.polgc< -1.5]<-1
data_long$c.pol.cc[data_long$c.polgc>=-1.5 & data_long$c.polgc<=-1 ]<-2
table(data_long$c.pol.cc)
data_long$c.pol.cc[data_long$c.polgc<= -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc> -1.5 & data_long$c.polgc<=-1 ]<-1
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc<-1 ]<-1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<-1
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc< -1 ]<-1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<-1
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc< -1 ]<- -1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<- -1
data_long$c.pol.cc[data_long$c.polgc==0 ]<- 0
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc< -1.5]<- -2
data_long$c.pol.cc[data_long$c.polgc>= -1.5 & data_long$c.polgc< -1 ]<- -1.5
data_long$c.pol.cc[data_long$c.polgc>=-1 & data_long$c.polgc<0 ]<- -1
data_long$c.pol.cc[data_long$c.polgc==0 ]<- 0
data_long$c.pol.cc[data_long$c.polgc<=1 & data_long$c.polgc>0 ]<- 1
data_long$c.pol.cc[data_long$c.polgc>1 & data_long$c.polgc<=1.5 ]<- 1.5
data_long$c.pol.cc[data_long$c.polgc<=2 & data_long$c.polgc>1.5 ]<- 2
data_long$c.pol.cc[data_long$c.polgc<=2.5 & data_long$c.polgc>2 ]<- 2.5
data_long$c.pol.cc[data_long$c.polgc>2.5 ]<- 3
table(data_long$c.pol.cc)
table(data_long$c.polgc)
df<-data.frame(table(data_long$c.polgc))
View(df)
# Valor predicho para movilizado, en cuanto a tolerar represión
confianza<-seq(min(data_long$c.polgc, na.rm = TRUE),
max(data_long$c.polgc, na.rm = TRUE), length=93)
library(rvest)
install.packages("rvest")
install.packages("purrr")
library(openxlsx)
library(stringr)
library(rvest)
library(stringr)
library(purrr)
pagina<-read_html("https://onedrive.live.com/?cid=436c65a4c90b65c2&id=436C65A4C90B65C2%21346&ithint=album&authkey=%21AlpuEvx7sYxZGog&v=photos")
View(pagina)
nombre <- pagina %>%
html_elements(xpath = '//div[@class= "od-DetailsRow-cell--Name ms-DetailsRow-cell cell-211 cellUnpadded-209"]')
pagina<-read_html("https://onedrive.live.com/?cid=436c65a4c90b65c2&id=436C65A4C90B65C2%21346&ithint=album&authkey=%21AlpuEvx7sYxZGog&v=photos")
nombre <- pagina %>%
html_elements(xpath = '//div[@class= "od-DetailsRow-cell--Name ms-DetailsRow-cell cell-211 cellUnpadded-209"]')
nombre
nombre <- pagina %>%
html_elements(xpath = '//gridcell[@class= "od-DetailsRow-cell--Name ms-DetailsRow-cell cell-211 cellUnpadded-209"]')
sjmisc
?sjmisc
rm(list = ls())
setwd("C:/Users/villagran/Desktop/scribs/datavoz/mallas de validacion/CEP87")
# LECTURA DE BB.DD DE DATOS
library(openxlsx)
library(dplyr)
library(tidyverse)
library(stringr)
library(haven)
data<-read_sav("datos_DS2113_SERNAPESCA_PT_18_08_2021.sav")
View(data)
names(data)
View(data)
data<-data[,c("REGISTRO", "F1","F2")]
resultadosS<-data.frame(data$ENTREVISTADOR)
resultadosS<-data.frame(data$REGISTRO)
salida<-c("F1","F2")
criterio.salto<-c("1,2","1,2")
secuencia<-function(objeto){
n<-length(objeto)
seq(objeto[[1]],objeto[[n]])
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(preguntas.s))
#coordenada2<-grep(paste("^",llegada[i],"$",sep=""), names(preguntas.s))
variable1<-as.integer(unlist(ejemplo[,coordenada1]))
print(rango)
s.check<-(variable1 ==  rango)*1
print(s.check)
#ll.check<-(!is.na(preguntas.s[,coordenada2]))*1
#revision<-paste0(s.check,ll.check)
resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
#coordenada2<-grep(paste("^",llegada[i],"$",sep=""), names(preguntas.s))
variable1<-as.integer(unlist(data[,coordenada1]))
print(rango)
s.check<-(variable1 ==  rango)*1
print(s.check)
#ll.check<-(!is.na(preguntas.s[,coordenada2]))*1
#revision<-paste0(s.check,ll.check)
resultadosS<-cbind(revision,resultadosS)
}
data<-read_sav("datos_DS2113_SERNAPESCA_PT_18_08_2021.sav")
data<-data[,c("REGISTRO", "F1","F2")]
resultadosS<-data.frame(data$REGISTRO)
salida<-c("F1","F2")
criterio.salto<-c("1,2","1,2")
secuencia<-function(objeto){
n<-length(objeto)
seq(objeto[[1]],objeto[[n]])
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.integer(unlist(data[,coordenada1]))
print(rango)
revision<-(variable1 ==  rango)*1
print(s.check)
resultadosS<-cbind(revision,resultadosS)
}
View(data)
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.integer(unlist(data[,coordenada1]))
print(variable1)
print(rango)
revision<-(variable1 ==  rango)*1
print(s.check)
resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.integer(unlist(data[,coordenada1]))
revision<-(variable1 ==  rango)*1
print(rango)
print(variable1)
print(s.check)
resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.integer(unlist(data[,coordenada1]))
revision<-(variable1 ==  rango)*1
print(rango)
print(variable1)
print(revision)
resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.integer(unlist(data[,coordenada1]))
revision<-(variable1 ==  rango)*1
class(rango)
class(variable1)
print(rango)
print(variable1)
print(revision)
resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.integer(unlist(data[,coordenada1]))
revision<-(variable1 ==  rango)*1
print(class(rango))
print(class(variable1))
print(rango)
print(variable1)
print(revision)
resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
revision<-(variable1 ==  rango)*1
print(class(rango))
print(class(variable1))
print(rango)
print(variable1)
print(revision)
resultadosS<-cbind(revision,resultadosS)
}
1 == 2
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
revision<-(variable1 ==  rango)
print(class(rango))
print(class(variable1))
print(rango)
print(variable1)
print(revision)
resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.vector(unlist(data[,coordenada1]))
revision<-(variable1 ==  rango)
print(class(rango))
print(class(variable1))
print(rango)
print(variable1)
print(revision)
resultadosS<-cbind(revision,resultadosS)
}
1 ==2
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.vector(unlist(data[,coordenada1]))
print(rango==variable1)
#resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.vector(unlist(data[,coordenada1]))
print((rango)==variable1)
#resultadosS<-cbind(revision,resultadosS)
}
objeto1<-c(1,2,3)
objeto2<-c(2)
objeto1==objeto2
criterio.salto<-c("1:2","1:2")
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.vector(unlist(data[,coordenada1]))
print((rango)==variable1)
#resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
print(rango)
print(variable1)
print((rango)==variable1)
#resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
print(rango)
print(variable1)
print((rango)%in%variable1)
#resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
print(i)
print(rango)
print(variable1)
print((rango)==variable1)
#resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
print(i)
print(rango)
print(variable1)
print((rango)==variable1[1])
#resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
print(i)
print(rango)
print(variable1)
print((rango[1])==variable1)
#resultadosS<-cbind(revision,resultadosS)
}
objeto<-c(1,2,3,4,5,6)
objeto[1]
objeto[1:length(objeto)]
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
print(i)
print(rango)
print(variable1)
print((rango[1:length(rango)])==variable1)
#resultadosS<-cbind(revision,resultadosS)
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
print(i)
print(rango)
print(variable1)
print((rango[1:length(rango)])==variable1[1:length(rango)])
#resultadosS<-cbind(revision,resultadosS)
}
data<-read_sav("datos_DS2113_SERNAPESCA_PT_18_08_2021.sav")
data<-data[,c("REGISTRO", "F1","F2")]
resultadosS<-data.frame(data$REGISTRO)
salida<-c("F1","F2")
criterio.salto<-c("1:2","1:2")
secuencia<-function(objeto){
n<-length(objeto)
seq(objeto[[1]],objeto[[n]])
}
for (i in 1:length(salida)){
ifelse ((str_detect(criterio.salto[i],",")),
rango<- criterio.salto[i] %>% str_split(",") %>%
unlist() %>% as.numeric(),
rango<-criterio.salto[i] %>% str_split(":") %>%
unlist() %>% as.numeric() %>% secuencia
)
coordenada1<-grep(paste("^",salida[i],"$",sep=""), names(data))
variable1<-as.numeric(unlist(data[,coordenada1]))
na.check<-(is.na(variable1))*1
rango.check<-(variable1 %in%  rango)*1
revision<-paste0(na.check,rango.check)
resultadosS<-cbind(revision,resultadosS)
}
nombres.u<-c()
for (i in 1:length(llegada)){
x1<-paste0(salida[i],"-",llegada[i], " (",criterio.salto[i],")")
nombres.u<-append(nombres.u,x1)
}
for (i in 1:length(salida)){
x1<-paste0(salida[i] " (",criterio.salto[i],")")
nombres.u<-append(nombres.u,x1)
}
for (i in 1:length(salida)){
x1<-paste0(salida[i], " (",criterio.salto[i],")")
nombres.u<-append(nombres.u,x1)
}
# Reordenar base de datos de revisisn y aqadir etiquetas
resultadosS<-rev(resultadosS)
etiquetas<-  append("id", nombres.u)
colnames(resultadosS)<-etiquetas
View(resultadosS)
resultadosS<-resultadosS %>%
dplyr::mutate_at(c(2:ncol(resultadosS)), recode, '00'='Fuera de rango',
'01'='cumple criterio', '10'='NA')
View(resultadosS)
View(data)
View(resultadosS)
For (i in 1:4) {
for (i in 1:4) {
Print(i)
}
for (i in 1:4) {
print(i)
}
rango<-c(“hogar”, “bus”, “trabajo”)
